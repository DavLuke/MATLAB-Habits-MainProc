% Setup PTB with some default values
PsychDefaultSetup(2);

%Hide cursor
HideCursor();


% 
% % Set up the parallel port for receiving the triggers Uncomment for the real thing

% config_io;
% address = hex2dec('378');
% outp(address, 150); %start experiment trigger


% %%%Lista de triggers
%  triggerStartBlock = 251; % byte to be sent (btbs) when the block starts 
%  triggerEmpty = 0; % btbs when no trigger is to be sent
%  tgC_NoD_HV = 11;
%  tgC_NoD_LV = 14;
%  tgC_DH_HV = 12;
%  tgC_DH_LV = 15;
%  tgC_DL_HV = 13;
%  tgC_DL_LV = 16;
%  tgC_arrows = 66;
%  
%  tgR_NoD_HV_Right = 21;tgR_NoD_HV_Left = 31;
%  tgR_NoD_LV_Right = 24;tgR_NoD_LV_Left = 34;
%  tgR_DH_HV_Right = 22;tgR_DH_HV_Left = 32;
%  tgR_DH_LV_Right = 25;tgR_DH_LV_Left = 35;
%  tgR_DL_HV_Right = 23;tgR_DL_HV_Left = 33;
%  tgR_DL_LV_Right = 26;tgR_DL_LV_Left = 36;
%  tgR_INC = 99;
%  tgR_arrows = 77;
%  
%  tgF_NoD_HV = 41;
%  tgF_NoD_LV = 44;
%  tgF_DH_HV = 42;
%  tgF_DH_LV = 45;
%  tgF_DL_HV = 43;
%  tgF_DL_LV = 46;
%  tgF_arrows_OK = 88; %Best response
%  tgF_arrows_BAD = 188; %Worst response
%  tgF_INC = 55;
%  
%  tgNew_block = 111;


% Seed the random number generator. Here we use the an older way to be
% compatible with older systems. Newer syntax would be rng('shuffle'). Look
% at the help function of rand "help rand" for more information
rand('seed', sum(100 * clock));


% Set the screen number to the external secondary monitor if there is one
% connected
screenNumber = max(Screen('Screens'));

% Define black, white and grey
white = WhiteIndex(screenNumber);
grey = white / 2;
black = BlackIndex(screenNumber);
red = [1 0 0];



% Numer of frames to wait before re-drawing
waitframes = 1;

% Open the screen
[wd, windowRect] = PsychImaging('OpenWindow', screenNumber, black, [], 32, 2);
%[wd, windowRect] = Screen('OpenWindow', screenNumber, black);


% Flip to clear
Screen('Flip', wd);

% Query the frame duration
ifi = Screen('GetFlipInterval', wd);

% Interstimulus interval time in seconds and frames
isiTimeSecs = 1;
isiTimeFrames = round(isiTimeSecs / ifi);


% Query the maximum priority level
topPriorityLevel = MaxPriority(wd);

% Get the centre coordinate of the window
[xCenter, yCenter] = RectCenter(windowRect);
%Number of pixels of the screen
[screenXpixels, screenYpixels] = Screen('WindowSize', wd);

% 
% 
% 
 resultText1 = screenYpixels * 0.5;  
 resultText2 = screenYpixels * 0.6;  
 resultText3 = screenYpixels * 0.7;
 resultText4 = screenYpixels * 0.8;
 resultText5 = screenYpixels * 0.9;

% Set the blend funciton for the screen
Screen('BlendFunction', wd, 'GL_SRC_ALPHA', 'GL_ONE_MINUS_SRC_ALPHA');

escapeKey = KbName('ESCAPE');
upKey = KbName('UpArrow');
downKey = KbName('DownArrow');
spacebar = KbName('space');
qKey = KbName('q');
pKey = KbName('p');


totalTrial = 0;
nominalFrameRate = Screen('NominalFrameRate', wd);
presSecs = [sort(repmat(1:5, 1, nominalFrameRate), 'descend') 0];

        Screen('TextFont', wd, 'Arial');
        Screen('TextSize', wd, 40);
% Position of the feedback text

feedbacktextRect1 = Screen('TextBounds', wd, 'Time out, respond faster');
xfeedback1 = (screenXpixels / 2) - (feedbacktextRect1(3) / 2);
yfeedback1 = (screenYpixels / 2) - (feedbacktextRect1(4) / 2);

feedbacktextRect2 = Screen('TextBounds', wd, '+1');
xfeedback2 = (screenXpixels / 2) - (feedbacktextRect2(3) / 2);
yfeedback2 = (screenYpixels / 2) - (feedbacktextRect2(4) / 2);

feedbacktextRect3 = Screen('TextBounds', wd, '+100');
xfeedback3 = (screenXpixels / 2) - (feedbacktextRect3(3) / 2);
yfeedback3 = (screenYpixels / 2) - (feedbacktextRect3(4) / 2);

feedbacktextRect4 = Screen('TextBounds', wd, 'ERROR');
xfeedback4 = (screenXpixels / 2) - (feedbacktextRect4(3) / 2);
yfeedback4 = (screenYpixels / 2) - (feedbacktextRect4(4) / 2);


numBlue = 0;
numYell = 0;
valueBlue = 0;
valueYell = 0;
normaltrial = 0;
diamondevaluated = 0;
tooearly = 0;
blockType = 3;
AlienPosition = 0;

        
